{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","src","img","alt","to","activeClassName","active","name","Message","message","maxLength100","maxLengthCreator","AddMessageFormReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Dialogs","state","dialogsPage","dialogElements","dialogs","map","el","messageElement","messages","dialog_items","value","sendMessage","newMessageText","compose","connect","dispatch","sendMessageActionCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCapMC,EAVI,SAACC,GAChB,IAAIC,EAAI,mBAAeD,EAAME,IAC7B,OACI,yBAAKC,UAAWC,IAAEC,QACd,yBAAKC,IAAKN,EAAMO,IAAKC,IAAI,KACzB,kBAAC,IAAD,CAASC,GAAIR,EAAMS,gBAAiBN,IAAEO,QAASX,EAAMY,QCFlDC,EAJC,SAACb,GACb,OAAO,yBAAKG,UAAWC,IAAEU,SAAUd,EAAMc,U,iCCCvCC,EAAeC,YAAiB,KAYzBC,EAA0BC,YAAU,CAACC,KAAM,wBAAjBD,EAVhB,SAAClB,GACpB,OACI,0BAAMoB,SAAUpB,EAAMqB,cAClB,kBAACC,EAAA,EAAD,CAAOC,YAAa,qBAAsBC,UAAWC,IAAUb,KAAM,iBAC9Dc,SAAU,CAACC,IAAUZ,KAC5B,4CCiBGa,EAvBC,SAAC5B,GACb,IAAI6B,EAAQ7B,EAAM8B,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAYhC,GAAIgC,EAAGhC,GAAIU,KAAMsB,EAAGtB,KAAML,IAAK2B,EAAG3B,SACvF4B,EAAiBN,EAAMO,SAASH,KAAI,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAShC,GAAIgC,EAAGhC,GAAIY,QAASoB,EAAGpB,aAM9E,OACI,yBAAKX,UAAWC,IAAE4B,SACd,yBAAK7B,UAAWC,IAAEiC,cACbN,GAEL,yBAAK5B,UAAWC,IAAEgC,UACd,6BAAMD,GACN,kBAAClB,EAAD,CAAyBG,SAXjB,SAACkB,GACjBtC,EAAMuC,YAAYD,EAAME,sB,uBCGjBC,sBACXC,aAVkB,SAACb,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACa,GACtB,MAAO,CAACJ,YAAa,SAACC,GAAD,OAAoBG,EAASC,YAAyBJ,SAK3EK,IAFWJ,CAGbb","file":"static/js/4.b889d97d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2blpE\",\"dialog_items\":\"Dialogs_dialog_items__HpTOk\",\"active\":\"Dialogs_active__3gJ61\",\"dialog\":\"Dialogs_dialog__2H7Xd\",\"messages\":\"Dialogs_messages__2jwXj\",\"message\":\"Dialogs_message__LXJRy\"};","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src={props.img} alt=\"\"/>\r\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\n\r\nconst Message = (props) =>{\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field placeholder={'Enter your message'} component={Textarea} name={'newMessageText'}\r\n                   validate={[required, maxLength100]}/>\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport const AddMessageFormReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {AddMessageFormReduxForm} from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogElements = state.dialogs.map(el => <DialogItem id={el.id} name={el.name} img={el.img}/>);\r\n    let messageElement = state.messages.map(el => <Message id={el.id} message={el.message}/>);\r\n\r\n    let addNewMessage = (value) => {\r\n        props.sendMessage(value.newMessageText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialog_items}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElement}</div>\r\n                <AddMessageFormReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageActionCreator} from \"../../Redux/messageReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {sendMessage: (newMessageText) => dispatch(sendMessageActionCreator(newMessageText))}\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}